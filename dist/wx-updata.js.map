{"version":3,"file":"wx-updata.js","sources":["../src/index.js"],"sourcesContent":["function isArray(tar) {\n    return Array.isArray(tar)\n}\n\nfunction isObject(tar) {\n    return (typeof tar === 'object') && (tar !== null) && !isArray(tar)\n}\n\n/**\n * 处理数组\n * @param value 当前值\n * @param curPath 当前路径\n * @param store 结果\n */\nconst handleArray = (value, curPath, store) => {\n    value.forEach((item, idx) => {        // forEach 会跳过数组空位\n        const arrPath = `${ curPath }[${ idx }]`  // 拼接数组路径\n        if (isObject(item)) {\n            objToPath(item, arrPath + '.', store)\n        } else if (isArray(item)) {\n            handleArray(item, arrPath, store)\n        } else {\n            store[arrPath] = item\n        }\n    })\n}\n\n/**\n * 对象转化为路径格式对象\n * @param obj 要转化的对象\n * @param prefix 路径前缀\n * @param store 结果\n */\nexport const objToPath = (obj,\n                          prefix = '',\n                          store = {}) => {\n    for (const [key, value] of Object.entries(obj)) {\n        const curPath = prefix === ''  // 当前路径\n          ? key\n          : prefix.endsWith('].')\n            ? `${ prefix }${ key }`\n            : `${ prefix }.${ key }`\n\n        if (isObject(value)) {                    // 是对象\n            objToPath(value, curPath, store)\n        } else if (isArray(value)) {              // 是数组\n            handleArray(value, curPath, store)\n        } else {\n            store[curPath] = value\n        }\n    }\n    return store\n}\n\n/**\n * 将函数挂载到 page 实例上\n * @param Page\n * @returns {function(any=): any}\n * @param conf\n */\nexport const updataInit = (Page, conf) => {\n    const originalPage = Page\n    return function(config) {\n        config.upData = function(data, func) {\n            if (conf.debug) {\n                console.log('转化后效果:', objToPath(data))\n            }\n            return this.setData(objToPath(data), func)\n        }\n        return originalPage(config)\n    }\n}\n"],"names":["isArray","tar","Array","isObject","_typeof","handleArray","value","curPath","store","forEach","item","idx","arrPath","objToPath","obj","prefix","Object","entries","key","endsWith","updataInit","Page","conf","originalPage","config","upData","data","func","debug","console","log","this","setData"],"mappings":"4qCAAA,SAASA,EAAQC,UACNC,MAAMF,QAAQC,GAGzB,SAASE,EAASF,SACS,WAAfG,EAAOH,IAA8B,OAARA,IAAkBD,EAAQC,GASnE,IAAMI,EAAc,SAAdA,EAAeC,EAAOC,EAASC,GACjCF,EAAMG,SAAQ,SAACC,EAAMC,OACXC,YAAcL,cAAaI,OAC7BR,EAASO,GACTG,EAAUH,EAAME,EAAU,IAAKJ,GACxBR,EAAQU,GACfL,EAAYK,EAAME,EAASJ,GAE3BA,EAAMI,GAAWF,MAWhBG,EAAY,SAAZA,EAAaC,WACAC,yDAAS,GACTP,yDAAQ,SACHQ,OAAOC,QAAQH,kBAAM,iBAApCI,OAAKZ,OACPC,EAAqB,KAAXQ,EACZG,EACAH,EAAOI,SAAS,gBACVJ,UAAWG,aACXH,cAAYG,GAElBf,EAASG,GACTO,EAAUP,EAAOC,EAASC,GACnBR,EAAQM,GACfD,EAAYC,EAAOC,EAASC,GAE5BA,EAAMD,GAAWD,SAGlBE,GASEY,EAAa,SAACC,EAAMC,OACvBC,EAAeF,SACd,SAASG,UACZA,EAAOC,OAAS,SAASC,EAAMC,UACvBL,EAAKM,OACLC,QAAQC,IAAI,SAAUjB,EAAUa,IAE7BK,KAAKC,QAAQnB,EAAUa,GAAOC,IAElCJ,EAAaC"}