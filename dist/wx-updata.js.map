{"version":3,"file":"wx-updata.js","sources":["../src/index.js"],"sourcesContent":["function isArray(tar) {\n    return Array.isArray(tar)\n}\n\nfunction isObject(tar) {\n    return (typeof tar === 'object') && (tar !== null) && !isArray(tar)\n}\n\nfunction isObjectOrArray(tar) {\n    return (typeof tar === 'object') && (tar !== null)\n}\n\n/**\n * 对象转化为路径格式对象\n * @param obj 要转化的对象\n * @param prefix 路径前缀\n * @param store 结果\n */\nexport const objToPath = (obj,\n                          prefix = '',\n                          store = {}) => {\n    for (const [key, value] of Object.entries(obj)) {\n        const curPath = prefix === ''  // 当前路径\n          ? key\n          : prefix.endsWith(']')\n            ? `${ prefix }${ key }`\n            : `${ prefix }/${ key }`\n\n        if (isObject(value)) {                    // 是对象\n            objToPath(value, curPath, store)\n        } else if (isArray(value)) {              // 是数组\n            value.forEach((item, idx) => {        // forEach 会跳过数组空位\n                const arrPath = `${ curPath }[${ idx }]`  // 拼接数组路径\n                if (isObjectOrArray(item)) {\n                    objToPath(item, arrPath, store)\n                } else {\n                    store[arrPath] = item\n                }\n            })\n        } else {\n            store[curPath] = value\n        }\n    }\n    return store\n}\n\nconst obj = { a: 1, b: { c: 2 }, d: [{ e: 3 }, , { f: 4, g: { h: 5 }, i: [{ j: 'k' }, 'hello', [{ l: 6 }, , 7, 'world']] }] }\n// const obj = { a: [{ m: 6 }, , 7, 'hello'] }\n\n\nconsole.log(\n  objToPath(obj)\n)\n"],"names":["isArray","tar","Array","isObject","_typeof","isObjectOrArray","objToPath","obj","prefix","store","key","value","curPath","endsWith","forEach","item","idx","arrPath","Object","entries","console","log","a","b","c","d","e","f","g","h","i","j","l"],"mappings":"4qCAAA,SAASA,EAAQC,UACNC,MAAMF,QAAQC,GAGzB,SAASE,EAASF,SACS,WAAfG,EAAOH,IAA8B,OAARA,IAAkBD,EAAQC,GAGnE,SAASI,EAAgBJ,SACE,WAAfG,EAAOH,IAA8B,OAARA,MAS5BK,EAAY,SAAZA,EAAaC,WACAC,yDAAS,GACTC,yDAAQ,gCAClBC,OAAKC,OACPC,EAAqB,KAAXJ,EACZE,EACAF,EAAOK,SAAS,eACVL,UAAWE,aACXF,cAAYE,GAElBP,EAASQ,GACTL,EAAUK,EAAOC,EAASH,GACnBT,EAAQW,GACfA,EAAMG,SAAQ,SAACC,EAAMC,OACXC,YAAcL,cAAaI,OAC7BX,EAAgBU,GAChBT,EAAUS,EAAME,EAASR,GAEzBA,EAAMQ,GAAWF,KAIzBN,EAAMG,GAAWD,SAnBEO,OAAOC,QAAQZ,6BAsBnCE,GAOXW,QAAQC,IACNf,EALU,CAAEgB,EAAG,EAAGC,EAAG,CAAEC,EAAG,GAAKC,EAAG,CAAC,CAAEC,EAAG,IAAO,CAAEC,EAAG,EAAGC,EAAG,CAAEC,EAAG,GAAKC,EAAG,CAAC,CAAEC,EAAG,KAAO,QAAS,CAAC,CAAEC,EAAG,IAAO,EAAG"}